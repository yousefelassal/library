---
---

<dialog
    id="addDialog"
    class="flex flex-col items-center rounded-xl w-80 h-[22.5rem] bg-white shadow-md top-[20vh] left-[calc(50vw-10rem)] backdrop-filter"
>
    <form
        method="dialog"
        class="p-4 flex flex-col gap-4 h-full w-full items-center"
    >
        <h1 class="text-lg text-center">Add your book</h1>
        <button
            class="rounded-full p-2 hover:fill-red-500 absolute top-2 right-2"
            id="cancel"
            type="reset"
            uxp-variant="primary"
        >
            <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 30 30"
                width="24px"
                height="24px"
            >
                <path
                    d="M 7 4 C 6.744125 4 6.4879687 4.0974687 6.2929688 4.2929688 L 4.2929688 6.2929688 C 3.9019687 6.6839688 3.9019687 7.3170313 4.2929688 7.7070312 L 11.585938 15 L 4.2929688 22.292969 C 3.9019687 22.683969 3.9019687 23.317031 4.2929688 23.707031 L 6.2929688 25.707031 C 6.6839688 26.098031 7.3170313 26.098031 7.7070312 25.707031 L 15 18.414062 L 22.292969 25.707031 C 22.682969 26.098031 23.317031 26.098031 23.707031 25.707031 L 25.707031 23.707031 C 26.098031 23.316031 26.098031 22.682969 25.707031 22.292969 L 18.414062 15 L 25.707031 7.7070312 C 26.098031 7.3170312 26.098031 6.6829688 25.707031 6.2929688 L 23.707031 4.2929688 C 23.316031 3.9019687 22.682969 3.9019687 22.292969 4.2929688 L 15 11.585938 L 7.7070312 4.2929688 C 7.5115312 4.0974687 7.255875 4 7 4 z"
                ></path></svg
            >
        </button>
        <input
            class="rounded-md h-9 w-56 p-2 bg-amber-700/10 shadow-inner"
            type="text"
            uxp-quiet="true"
            id="title"
            placeholder="Title"
            maxlength="20"
            required
        />
        <input
            class="rounded-md h-9 w-56 p-2 bg-amber-700/10 shadow-inner"
            type="text"
            uxp-quiet="true"
            id="author"
            placeholder="Author"
            maxlength="20"
            required
        />
        <input
            class="rounded-md h-9 w-56 p-2 bg-amber-700/10 shadow-inner"
            type="number"
            uxp-quiet="true"
            id="pages"
            placeholder="Pages"
            maxlength="20"
            required
        />
        <div class="flex justify-center">
            <h1 class="text-left text-base place-self-start mt-[0.1rem]">Type</h1>
            <label class="radio-button text-sm">
                <input value="book" name="radio" type="radio" checked>
                <span class="radio"></span>
                Book
            </label>
            
            <label class="radio-button text-sm">
                <input value="audiobook" name="radio" type="radio">
                <span class="radio"></span>
                AudioBook
            </label>
        </div>
        <label class="container flex place-items-center gap-2">
            <input id="read" checked="checked" type="checkbox">
            <span id="mark" class="text-sm ml-8">Mark as read</span>
            <div class="checkmark"></div>
          </label>
        <footer>
            <button
                class="rounded-md bg-[var(--primary-color)] p-2 w-56 text-[var(--secondary-color)] hover:bg-[#c1995b]"
                id="confirm"
                type="submit"
                uxp-variant="cta">Add</button
            >
        </footer>
    </form>
</dialog>

<style>
    dialog::backdrop {
        backdrop-filter: blur(2px);
        transition: backdrop-filter 0.5s ease-in-out;
    }

    dialog[open] {
        animation: fadeIn 0.1s ease-in-out;
    }

    dialog.hide {
        animation: fadeOut 0.1s ease-in-out;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            scale: 0;
        }
        to {
            opacity: 1;
            scale: 1;
        }
    }

    @keyframes fadeOut {
        from {
            opacity: 1;
            scale: 1;
        }
        to {
            opacity: 0;
            scale: 0;
        }
    }

    .radio-button {
  display: flex;
  gap: 5px;
  justify-content: center;
  margin: 5px;
  position: relative;
  align-items: center;
}

.radio-button input[type="radio"] {
  position: absolute;
  opacity: 0;
}

.radio {
  position: relative;
  display: inline-block;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid var(--secondary-color);
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);
  transition: all 0.3s ease-in-out;
}

.radio-button input[type="radio"]:checked + .radio {
  border-color: var(--secondary-color));
  transform: translateZ(0px);
  background-color: var(--primary-color);
}

.radio-button input[type="radio"]:checked + .radio::before {
  opacity: 1;
}

/* Hide the default checkbox */
.container input {
 position: absolute;
 opacity: 0;
 cursor: pointer;
 height: 0;
 width: 0;
}

.container {
 display: block;
 position: relative;
 cursor: pointer;
 font-size: 20px;
 user-select: none;
}

/* Create a custom checkbox */
.checkmark {
 position: relative;
 top: 0;
 left: 0;
 height: 1em;
 width: 1em;
 background: #606062;
 border-radius: 5px;
 box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.30), 0px 1px 1px rgba(0,5);
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
 background-image: linear-gradient(var(--primary-color),#da952d)
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
 content: "";
 position: absolute;
 display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
 display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
 left: 0.4em;
 top: 0.2em;
 width: 0.25em;
 height: 0.5em;
 border: solid white;
 border-width: 0 0.15em 0.15em 0;
 transform: rotate(45deg);
}

</style>
